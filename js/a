// WGS 84 / UPS North (N,E)
proj4.defs('EPSG:32661', '+proj=stere +lat_0=90 +lat_ts=90 +lon_0=0 +k=0.994 +x_0=2000000 +y_0=2000000 +datum=WGS84 +units=m +no_defs');
var proj32661 = ol.proj.get('EPSG:32661');
var ex32661 = [-4e+06,-6e+06,8e+06,8e+06];
proj32661.setExtent(ex32661);
ol.proj.addProjection(proj32661);

var ext = ex32661;
var prj = proj32661;


var prinfo = Drupal.settings.prinfo;
var id_name = Drupal.settings.id_name;
var layer = {};

// Base layer WMS
layer['base']  = new ol.layer.Tile({
   type: 'base',
   title: 'base',
   displayInLayerSwitcher: false,
   source: new ol.source.TileWMS({ 
       url: 'http://public-wms.met.no/backgroundmaps/northpole.map',
       params: {'LAYERS': 'world', 'TRANSPARENT':'false', 'VERSION':'1.1.1','FORMAT':'image/png', 'SRS':prj}
   })
});

// Border layer WMS
layer['border']  = new ol.layer.Tile({
   title: 'border',
   source: new ol.source.TileWMS({ 
       url: 'http://public-wms.met.no/backgroundmaps/northpole.map',
       params: {'LAYERS': 'borders', 'TRANSPARENT':'true', 'VERSION':'1.1.1','FORMAT':'image/png', 'SRS':prj}
   })
});

// Border layer WMS
layer['cloud']  = new ol.layer.Tile({
   title: 'cloud',
   source: new ol.source.TileWMS({ 
       url: 'http://thredds.met.no/thredds/wms/aromearcticlatest/arome_arctic_pp_2_5km_latest.nc',
       params: {'LAYERS': 'cloud_area_fraction', 'TRANSPARENT':'true', 'VERSION':'1.3.0','FORMAT':'image/png', 'SRS':prj}
   })
});
// feature layer KML 
layer['kml1A'] = new ol.layer.Vector({
   title: 'Sentinel-1A',
   source: new ol.source.Vector({
       url: '/sites/sios.metsis.met.no/files/kml/S1A_acquisition_today.kml',
       format: new ol.format.KML({extractStyles: false, extractAttributes: true}),
   })
})

// feature layer KML 
layer['kml1B'] = new ol.layer.Vector({
   title: 'Sentinel-1B',
   source: new ol.source.Vector({
       url: '/sites/sios.metsis.met.no/files/kml/S1B_acquisition_today.kml',
       format: new ol.format.KML({extractStyles: false, extractAttributes: true}),
   })
})
// feature layer KML 
layer['kml2A'] = new ol.layer.Vector({
   title: 'Sentinel-2A',
   source: new ol.source.Vector({
       url: '/sites/sios.metsis.met.no/files/kml/S2A_acquisition_today.kml',
       format: new ol.format.KML({extractStyles: false, extractAttributes: true}),
   })
})

// feature layer KML 
layer['kml2B'] = new ol.layer.Vector({
   title: 'Sentinel-2B',
   source: new ol.source.Vector({
       url: '/sites/sios.metsis.met.no/files/kml/S2B_acquisition_today.kml',
       format: new ol.format.KML({extractStyles: false, extractAttributes: true}),
   })
})

var kml_group = new ol.layer.Group({
   title: 'Passage',
   openInLayerSwitcher: false,
   layers: [layer['kml1A'],
            layer['kml1B'],
            layer['kml2A'],
            layer['kml2B']]
});

// build up the map
var centerLonLat = [18, 70];
var centerTrans = ol.proj.transform(centerLonLat, "EPSG:4326",  prj);

var map = new ol.Map({
   controls: ol.control.defaults().extend([
      new ol.control.FullScreen()
   ]),
   target: 'map',
   layers: [ layer['base']
           ],
   view: new ol.View({
                 zoom: 3, 
                 minZoom: 3,
                 center: centerTrans,
                 projection: prj,
                 extent: ext
   })
});


function myF1(){

map.getLayers().getArray().slice().forEach(layer => {
   map.removeLayer(layer);
});

var list_of_layers_S1 = []; 
var list_of_layers_S2 = []; 

// add the layers to the groups
for(var i12=1; i12 <= prinfo.length-1; i12++){
   if (prinfo[i12].includes("S2")){ //I don't get this for i12
      layer[i12] = new ol.layer.Tile({
         title: i12,
         displayInLayerSwitcher: false,
         source: new ol.source.TileWMS({ 
         url: prinfo[i12],
         params: {'LAYERS': 'true_color_vegetation', 'TRANSPARENT':'true', 'FORMAT':'image/png', 'CRS':'EPSG:32661', 'VERSION':'1.3.0', 'SERVICE':'WMS','REQUEST':'GetMap','TILE':'true','WIDTH':'256','HEIGHT':'256'}
         })
      });
   list_of_layers_S2.push(layer[i12]);
   }else{
      layer[i12] = new ol.layer.Tile({
         title: id_name[i12],
         displayInLayerSwitcher: false,
         source: new ol.source.TileWMS({ 
         url: prinfo[i12],
         params: {'LAYERS': 'amplitude_hh', 'TRANSPARENT':'true', 'FORMAT':'image/png', 'CRS':'EPSG:32661', 'VERSION':'1.3.0', 'SERVICE':'WMS','REQUEST':'GetMap','TILE':'true','WIDTH':'256','HEIGHT':'256'}
         })
      });
   list_of_layers_S1.push(layer[i12]);
   }
//map.addLayer(layer[i12]);
}

// build up the S1 and S2 groups
var S1_group = new ol.layer.Group({
   title: 'S1',
   openInLayerSwitcher: false,
   layers: list_of_layers_S1
});

var S2_group = new ol.layer.Group({
   title: 'S2',
   openInLayerSwitcher: false,
   layers: list_of_layers_S2
});


map.addLayer(layer['base']);
map.addLayer(S1_group);
map.addLayer(S2_group);

}

function myF2(){

map.getLayers().getArray().slice().forEach(layer => {
      map.removeLayer(layer);
});

map.addLayer(layer['base']);
map.addLayer(layer['cloud']);
map.addLayer(kml_group);
map.addLayer(layer['border']);

}

//Layer switcher
//var lswitcher = new ol.control.LayerSwitcher({targer:$(".layerSwithcer").get(0),});
var lswitcher = new ol.control.LayerSwitcher({});
map.addControl(lswitcher);

//Mouseposition
var mousePositionControl = new ol.control.MousePosition({
   coordinateFormat : function(co) {
      return ol.coordinate.format(co, template = 'lon: {x}, lat: {y}', 2);
   },
   projection : 'EPSG:4326', 
});
map.addControl(mousePositionControl);



